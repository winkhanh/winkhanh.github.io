{"version":3,"sources":["assets/Bg1.svg","assets/GitWin.svg","assets/FacebookWin.svg","assets/InstagramWin.svg","assets/DiscordWin.svg","assets/p1_bg.png","assets/Bg2.svg","assets/Bg3.svg","assets/me.jpg","context/theme.tsx","components/WButton/WButton.tsx","sections/Header/Header.tsx","components/FunnyText/FunnyText.tsx","sections/Body/Home/Home.tsx","sections/Body/About/About.tsx","sections/Body/Body.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ThemeContext","React","createContext","theme","setTheme","aNum","changeTheme","WButton","useContext","onClick","className","routes","contacts","Git","Facebook","Instagram","Discord","Header","Navbar","expand","fixed","bg","sticky","Brand","Toggle","aria-controls","Collapse","id","Nav","map","obj","idx","Item","key","Link","href","target","src","alt","style","as","Button","background","FT","children","show","slice","listOfBg","Bg1","Bg2","Bg3","Home","useState","displayingText","setDisplayingText","randomMode","setRandomMode","Bg","setBg","useEffect","Math","floor","random","setTimeout","prev","clearTimeout","console","log","backgroundImage","backgroundSize","padding","About","Container","Row","Col","md","xs","me","Body","App","round","Provider","value","aNumber","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3798501.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bg1.055d896f.svg\";","module.exports = __webpack_public_path__ + \"static/media/GitWin.c6f31b31.svg\";","module.exports = __webpack_public_path__ + \"static/media/FacebookWin.1049d0ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/InstagramWin.756916bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/DiscordWin.43910bb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/p1_bg.0e3f0b9f.png\";","module.exports = __webpack_public_path__ + \"static/media/Bg2.92e34efc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bg3.d113c511.svg\";","module.exports = __webpack_public_path__ + \"static/media/me.62062077.jpg\";","import React from 'react';\n\nconst ThemeContext= React.createContext({\n    theme:0,\n    setTheme:(aNum:number)=>{},\n    changeTheme:()=>{}\n});\n\nexport default ThemeContext;","import React,{useContext} from 'react';\nimport './WButton.scss';\nimport ThemeContext from '../../context/theme';\nconst WButton : React.FC = ()=>{\n    const {changeTheme}=useContext(ThemeContext);\n    return(\n        <span onClick={()=>{changeTheme();}} className='w-button-wrapper'>\n                <div className='w-button'>\n                    <div className=\"bar1\"></div>\n                    <div className=\"bar3\"></div>\n                    <div className=\"bar2\"></div>\n                    <div className=\"bar4\"></div>\n                </div>\n        </span>\n    )\n}\n\nexport default WButton;","import React from 'react';\nimport {Navbar, Nav, Button} from 'react-bootstrap';\nimport WButton from '../../components/WButton/WButton';\nimport Git from '../../assets/GitWin.svg';\nimport Facebook from '../../assets/FacebookWin.svg';\nimport Instagram from '../../assets/InstagramWin.svg';\nimport Discord from '../../assets/DiscordWin.svg';\nimport background from '../../assets/p1_bg.png';\nconst routes : [string,string][]=[\n    ['[Home]','/'],\n    ['[About]','/about'],\n    ['[Contact me]','/contact']\n];\nconst contacts: [string,string][]=[\n    [Git,'https://github.com/winkhanh'],\n    [Facebook,'https://www.facebook.com/wgiakhanh'],\n    [Instagram,'https://www.instagram.com/khanh180900/'],\n    [Discord,'']\n];\n\nconst Header : React.FC = ()=>{\n    return(\n        <Navbar expand='lg' fixed='top' bg=\"light\" sticky='top'>\n            <Navbar.Brand>\n                <WButton/>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                {routes.map((obj,idx)=>\n                    <Nav.Item key={idx}>\n                        <Nav.Link href={obj[1]}>{obj[0]}</Nav.Link>\n                    </Nav.Item>    \n                )}\n                </Nav>\n                \n                <Nav className=\"ml-auto\">\n                {contacts.map((obj,idx)=>\n                    <Nav.Item key={idx}>\n                        <Nav.Link href={obj[1]} target=\"_blank\">\n                            <img src={obj[0]} alt={obj[1]} style={{\"height\":\"4vh\"}}/>\n                        </Nav.Link>\n                    </Nav.Item>\n                )}\n                    <Nav.Item>\n                        <Nav.Link as={Button} href=\"https://drive.google.com/file/d/1BgqFQH-xIOnVdirdmabx-nzqgujkJEVQ/view?usp=sharing\" target=\"_blank\"\n                        style={{\n                            background:`url(${background}) no-repeat`,\n                            \"background-size\":'contain',\n                            \"background-position\":\"center\"\n\n                        }}>\n                            <b>{\"Resume\"}</b></Nav.Link>\n                    </Nav.Item>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n};\nexport default Header;","import React from 'react';\nimport './FunnyText.scss';\ninterface FTProps{\n    children:string,\n    show?:boolean\n}\nconst FT : React.FC <FTProps> = ({children,show})=>{\n    \n    return(\n        <h1 className={`funny-text ${(show)?\"\":\"funny-text-hidden\"}`}><span className={\"first-letter\"}>{children.slice(0,1)}</span><span className={\"following-letters\"}>{children.slice(1)}</span></h1>\n    )\n}\n\nexport default FT;","import React,{useState, useEffect} from 'react';\nimport Bg1 from '../../../assets/Bg1.svg';\nimport Bg2 from '../../../assets/Bg2.svg';\nimport Bg3 from '../../../assets/Bg3.svg';\n\nimport FunnyText from '../../../components/FunnyText/FunnyText';\nimport './Home.scss';\nconst listOfBg : string[] = [Bg1,Bg2,Bg3];\nconst Home: React.FC = ()=>{\n    \n    const [displayingText,setDisplayingText]=useState(0);\n    const [randomMode,setRandomMode]=useState(false);\n    const [Bg,setBg]=useState(Bg1);\n    useEffect(()=>{\n        setBg(listOfBg[Math.floor(Math.random()*3)]);\n    },[])\n    \n    useEffect(()=>{\n        let id : ReturnType<typeof setTimeout> = setTimeout(()=>{\n            setRandomMode(prev=>!prev);\n        },20000);\n        return ()=>{\n            clearTimeout(id);\n        }\n    })\n    useEffect(()=>{\n        const randomModeFnc = ()=>{\n            setDisplayingText(Math.floor(Math.random()*5));\n        }\n        const linearModeFnc = ()=>{\n            setDisplayingText(prev=>(prev+1)%5);\n        }\n        let id : ReturnType<typeof setTimeout> = setTimeout(\n            ((randomMode)?(randomModeFnc):(linearModeFnc))\n        ,1000);\n        console.log(displayingText);\n        return ()=>{\n            clearTimeout(id);\n        }\n    },[displayingText, randomMode])\n    return(\n        <div style={{\n            backgroundImage:`url(${Bg})`,\n            backgroundSize:\"cover\",\n            padding:\"10px\"\n        }}>\n            <FunnyText show={(displayingText===0)}>KHANH LE</FunnyText>\n            <FunnyText show={(displayingText===1)}>Hometown in Vietnam</FunnyText>\n            <FunnyText show={(displayingText===2)}>A competitive programmer</FunnyText>\n            <FunnyText show={(displayingText===3)}>Now, a fullstack dev</FunnyText>\n            <FunnyText show={(displayingText===4)}>Hmmmmmmm</FunnyText>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport {Container, Col, Row, Button} from 'react-bootstrap';\nimport me from '../../../assets/me.jpg';\nimport './About.scss';\nconst AboutText=\"I'm Khanh Le, a competitive programmer as well as a web and mobile developer who enjoys solving both programming and real-world problems. \"\n+\"I has been programming since 2014, which focused on competitive programming mostly. From 2018, I also have been working as a fullstack developer. \"\n+\"I love to learn about algorithms and apply them to solve mathematical/programming problems. \"\n+\"Besides, I love to develop software solution to solve real-life problem of myself or my communities. \"\n+\"I was a co-founder and currently the president of Coding Hub, an organization that develops web and mobile applications to solve problems and improve learning/living experience of students on-campus\"\n+\"at SUNY Plattsburgh. If there is any project that want to collaborate with me, feel free to reach out to me.\"\nconst ResumeText=\"This is my resume. I'm currently open to any intern/co-op opportunity for Fall/Winter 2020 and Spring/Summer 2021.\"\nconst About : React.FC = ()=>{\n    return (\n        <div className={'about'} id={'about'}>\n            <Container>\n                <Row>\n                    <Col className=\"about-col\" md={6} xs={12}>\n                        <img src={me} className=\"about-photo\" alt=\"my face :P\"/>\n                    </Col>\n                    <Col md={6} xs={12}>\n                        <div className=\"about-content\">\n                            <p>Hi there,</p>\n                            <p>{AboutText}</p>\n                            <p>{ResumeText}</p>\n                            <a href=\"https://drive.google.com/file/d/1BgqFQH-xIOnVdirdmabx-nzqgujkJEVQ/view?usp=sharing\" target=\"_blank\"><Button><u>Resume</u></Button></a>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n};\n\nexport default About;","import React from 'react';\nimport Home from './Home/Home';\nimport About from './About/About';\n\nconst Body : React.FC = ()=>{\n    return(\n        <div>\n            <Home/>\n            <About/>\n        </div>\n    )\n};\n\nexport default Body;","import React,{useState} from 'react';\nimport ThemeContext from './context/theme';\nimport './App.scss';\nimport Header from './sections/Header/Header';\nimport Body from './sections/Body/Body';\nfunction App() {\n  const [theme,setTheme]=useState(Math.round(Math.random()*360))\n  return (\n    <ThemeContext.Provider value={{\n      theme:theme,\n      setTheme:(aNumber:number)=>{setTheme(aNumber);},\n      changeTheme:()=>{setTheme(Math.round(Math.random()*360))}\n    }}>\n    <div className=\"App\">\n      <Header/>\n      <Body/>\n    </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}